{"version":3,"sources":["reportWebVitals.js","axios.js","components/image.js","components/pagination.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","process","Image","props","useState","src","setSrc","useEffect","onError","length","Carousel","interval","map","index","Item","className","postid","concat","Pagination","posts","page","setPage","position","style","overflow","onClick","window","scrollTo","cursor","Navbar","to","Posts","setPosts","get","res","data","forEach","post","date","Date","createdAt","toDateString","document","title","Card","Header","username","_id","attachment","Body","opacity","Text","text","replace","href","match","comment","About","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cbc0c72.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\n// use proxy in development environment\r\nconst instance = axios.create(\r\n  process.env.NODE_ENV === \"development\" && {\r\n    baseURL: \"http://localhost:5000/\",\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import { Carousel } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Image = (props) => {\r\n  const [src, setSrc] = useState([]);\r\n  useEffect(() => {\r\n    setSrc(props.src);\r\n  }, []);\r\n\r\n  const onError = () => {\r\n    setSrc([\"/logo192.png\"]);\r\n  };\r\n\r\n  return src.length > 1 ? (\r\n    <Carousel interval={null}>\r\n      {src.map((src, index) => {\r\n        return (\r\n          <Carousel.Item key={props.postid.concat(index)}>\r\n            <img\r\n              className=\"w-100 h-auto\"\r\n              {...props}\r\n              src={src}\r\n              onError={onError}\r\n            />\r\n          </Carousel.Item>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  ) : (\r\n    <img className=\"w-100 h-auto\" {...props} src={src} onError={onError} />\r\n  );\r\n};\r\n\r\nexport { Image };\r\n","const Pagination = ({ posts, page, setPage, position, style, className }) => {\r\n  if (position === \"top\") {\r\n    return (\r\n      <div className={className} style={{overflow: \"auto\", ...style}} >\r\n        <div>\r\n            <p\r\n              className=\"float-right\"\r\n              onClick={() => {\r\n                window.scrollTo(0, 0);\r\n                setPage(0);\r\n              }}\r\n            >\r\n              <u style={{cursor: \"pointer\"}}>Latest page</u>\r\n            </p>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (position === \"bottom\") {\r\n    return (\r\n      <div className={className} style={{overflow: \"auto\", ...style}}>\r\n        <div>\r\n          {page !== 0 && (\r\n            <p\r\n              className=\"float-left\"\r\n              onClick={() => {\r\n                if (page !== 0) {\r\n                  setPage(page - 1);\r\n                }\r\n              }}\r\n            >\r\n              <u style={{cursor: \"pointer\"}}>Newer posts</u>\r\n            </p>\r\n          )}\r\n\r\n          {posts.length !== 0 && (\r\n            <p\r\n              className=\"float-right\"\r\n              onClick={() => {\r\n                window.scrollTo(0, 0);\r\n                setPage(page + 1);\r\n              }}\r\n            >\r\n              <u style={{cursor: \"pointer\"}}>Older posts</u>\r\n            </p>\r\n          )}\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport { Pagination };\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"./axios\";\r\n\r\nimport { Image } from \"./components/image\";\r\nimport { Pagination } from \"./components/pagination\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"navbar-list\">\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get(`api/posts/${page}`).then((res) => {\r\n      res.data.forEach((post) => {\r\n        post.date = new Date(post.createdAt).toDateString();\r\n      });\r\n      setPosts(res.data);\r\n    });\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Linky\";\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pagination setPage={setPage} position=\"top\" />\r\n\r\n      {posts.length === 0 && (\r\n        <div className=\"m-5 text-center\">Oops, no more posts!</div>\r\n      )}\r\n\r\n      {posts.map((post) => (\r\n        <Card key={post._id} className=\"mb-5\">\r\n          <Card.Header>{post.username}</Card.Header>\r\n          <Image postid={post._id} src={post.attachment} />\r\n\r\n          <Card.Body style={{ opacity: 0.8 }}>\r\n            <Card.Text className=\"my-1\">\r\n              {post.text && post.text.replace(/https:\\/\\/t.co\\/[^ ]*/, \"\")}\r\n              {post.text && (\r\n                <a href={post.text && post.text.match(/https:\\/\\/t.co\\/[^ ]*/)}>\r\n                  (Source)\r\n                </a>\r\n              )}\r\n            </Card.Text>\r\n            <div style={{ overflow: \"auto\" }}>\r\n              <Card.Text className=\"float-left mb-1\">{post.date}</Card.Text>\r\n              <Card.Text className=\"float-right\">\r\n                <i className=\"fas fa-share\"></i>\r\n                <i className=\"fas fa-heart mx-2\"></i>\r\n              </Card.Text>\r\n            </div>\r\n            {post.comment.map((comment) => (\r\n              <Card.Text>\r\n                <span><b>{comment.username}</b></span>\r\n                <span className=\"ml-3\">{comment.text}</span> \r\n              </Card.Text>\r\n            ))}\r\n            <Card.Text>\r\n              <Link to={\"/post/\" + post._id}>\r\n             See full post \r\n             </Link>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n\r\n      <Pagination\r\n        page={page}\r\n        setPage={setPage}\r\n        posts={posts}\r\n        position=\"bottom\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst About = () => {\r\n  useEffect(() => {\r\n    document.title = \"About\";\r\n  }, []);\r\n\r\n  return <p className=\"mx-1 mt-4\">Linky</p>;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"App app\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Posts />\r\n          </Route>\r\n\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}